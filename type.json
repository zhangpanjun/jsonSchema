{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id":"https://example.com/schemas/type",
    "type": "object",
    "title": "type类型关键字schema",
    "description": "此文件盛放type类型关键字schema的一些配置项;",
    "$comment": "properties和patternProperties有相同开头的key时，则验证规则则会以patternProperties中对应key的验证规则为准",
    "properties": {
        "name":{
            "type":"string",
            "minLength": 2,
            "maxLength": 10
        },
        "age": {
            "title": "年龄",
            "type": "integer",
            "default": 10,
            "description": "年龄字段，类型必须是数字，且固定值10，必填",
            "$comment": "这里可以写一些代码备注之类的~",
            "const": 10
        },
        "score":{
            "type": "number",
            "minimum": 10,
            "exclusiveMinimum": 10,
            "maximum": 60,
            "exclusiveMaximum": 60,
            "description": "得分需要控制在10-60之间，且不包含10,60"
        },
        "birth": {
            "type": "string",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "format": "date"
        },
        "email":{
            "type": "string",
            "format": "email"
        },
        "homePageUrl":{
            "type": "string",
            "format": "uri"
        },
        "homePageUrlJsonPointer":{
            "type": "string",
            "format": "json-pointer"
        },
        "homePageUrlAnchor":{
            "type": "string",
            "format": "uri-reference"
        },
        "friends":{
            "type":"array",
            "items":{
                "type":"string",
                "$comment": "相同模式，里边的每一项都需要符合此规则,称之为列表验证"
            }
        },
        "address":{
            "type":"array",
            "items": [
                {
                    "type":"number",
                    "$comment": "这里盛放门牌号"
                },
                {
                    "type":"string",
                    "$comment": "这里盛放街道"
                },
                {
                    "enum": ["丰台区","大兴区"]
                },
                {
                    "enum": ["北京市"]
                },
                {
                    "enum": ["中国"]
                }
            ],
            "additionalItems": {
                "type":"string",
                "$comment": "对于元组数据，可以通过additionalItems来限定是否可以向既定元祖项中增加数据，false为禁止，对象模式可以具体更细节把控添加进来的数据具体格式"
            },
            "$comment": "这种每个项都有自己的验证模式被称为元组验证"
        },
        "hobby":{
            "type":"array",
            "contains": {
                "type":"string"
            },
            "minItems":1,
            "maxItems": 3,
            "uniqueItems": true,
            "$comment": "也可以限定接收的数据包含>=1个项符合某个规则;minItems,maxItems来控制数组长度，uniqueItems限定每个项必须唯一"
        },
        "isGirl":{
            "type":"boolean"
        },
        "isNull":{
            "type":"null"
        },
        "constProperty": {
            "const":"这里是一个固定值"
        }
        
    },
    "minProperties":3,
    "maxProperties": 100,
    "patternProperties": {
        "na":{
            "type":"string"
        },
        "class_":{
            "type":"integer"
        }
    },
    "propertyNames": {
        "type":"string",
        "pattern": "^[A-Za-z_0-9]*$",
        "$comment": "这个字段限定接收到的数据key的值类型，以及key的写法规则；此规则对于properties，patternProperties，additionalProperties都必须符合"
    },
    "additionalProperties": {
        "type":"string",
        "$comment": "additionalProperties值可以为布尔值也可以为指定可以接纳除了properties和patternProperties的属性类型；"
    },
    "required": ["name","age"]
}
